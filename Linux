NVME soft raid
https://habr.com/ru/post/491454/


В линуксе присутствует связь между входным пользователем (учетной записью ) и идентификатором пользователя UID. При операциях с учетной записью пользователя меняется UID. UID имеются у всех
процессов в системе и у всех объектов файловой системы. UID связан с GID (идентификатор группы). Пользователь может входить в несколько групп, но в учетной записи пользователя показывается 
номер группы по умолчанию.
authentificaton - проверка подлинности логина/пароля
В файловой системе у файла должна быть ссылка на, хотя бы, 1 каталог.

/dev - в каталоге лежат файлы дырки. Файлы для обращения к системным ресурсам и устройствам. В данных файлах данные только передаются
каждому файлу соответствует индексный дескриптор:
- типа файла
- права доступа к файлу 
- информация о том, кому принадлежит файл 
- отметки о времени создания, модификации, последнего доступа к файлу 
- размер
- указатели на физические блоки на диски
все индексные дескрипторы пронумерованы
индексный дескриптор уникален в рамках одной файловой системы

PPID - parent pid 
Доступ процесса к ресурсам регулируется с помощью идентификатора пользователя и идентификатора группы.
exec() - запуск одного процесса вместо другого. Parent process убивается.
fork() - starts another process. The copy of parent one.
+r/+x/+w:
r - access to list catalog
w - access to write
x - make executable
у сценарных файлов setuid игнорируется. файл со сценарием передается интерпретатору всего лишь как параметр командной строки
Кадый процесс при старте получает 3 файла:
- дескриптор 0 открыт на чтение, стандартный ввод процесса
- дескриптор 1 открыт на запись, стандартный вывод ошибок
- дескриптор 2 открыт для вывода диагностических сообщений, стандартный вывод ошибок

дескриптор
описатель потока данных, открытого процессом. При открытии нового потока данных его дескриптор получает наименьший номер из неиспользуемых.
Три стандартных дескриптора выдаются процессу при запуске.
Все открытые дескрипторы копируются от родительского процесса дочернему.
stdout - standard output. Flow of data, that is openned by the system at the moment when it starts. It is designed for data, that is an output of the process
stdin - standard input. input from keyboard to the file. data flow that opened by the system for each process when the process starts
channel - indivisible pare of descriptors (in/out) connected together. The data written to input descriptor, trasnffered immidiately to output descriptor
окружение - набор данных, приписанных системой процессу. Процесс может пользоваться окружением для изменения информации. Окружение представлено в виде
переменных окружения. При fork() окружение родительского процесса наследуется.
внутри двойных кавычек действует подстановка значений переменным
атомарная операция - выполняется целиком или не выполняется вовсе
для обработки сценария всегда запускается дочерний процесс и все переменные принадлежат именно ему
демон - программа, работающая в фоне. Активируется по сетевому запросу или по наступлению какого-либо системного события.
Классический демон запускается интерактивно, проверяет конфигурационные файлы и уходит в фон fork() и завершая родительский процесс.
стартовые сценарии управляют каким-нибудь свойством системы (включением/выключением службы, закгрузка модулей, активизация/деактивизация сетевых настроек)
sysinit - запускается до runlevel. настривает аппаратуру дисковых массивов, проверяет и монтирует дисковые файловые системы.
файл дырка имеет индексный дескриптор 
виртуальная файловая система - полностью заменяет собой каталог /dev, либо располагается в другом разделе /sys. Механизм отображения в виде
файловой системы любых иерархически организованных данных.
каналы (fifo) - именованный/неименованный. Объект, используемый в межпроцессном взаимодействии. Доступен в виде дескрипторов. Один открыт на запись,
другой на чтение. неименованный канал уничтожается с закрытием обоих дескрипторов. Именованный - файл дырка, создаваемый в файловой системе.
